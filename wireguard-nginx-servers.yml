AWSTemplateFormatVersion: "2010-09-09"
Description: "Wireguard instance deployed in a VPC, in another stack"

Parameters:
  WireguardPassword:
    Description: Initial wireguard password
    Type: String
    AllowedPattern: .+
    MinLength: 1
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:

  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VPCName: One AZ Stack
      TemplateURL: "https://reiland-sideprojects.s3.ap-southeast-1.amazonaws.com/one-az-vpc-template.yml"

  WireguardSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Wireguard-sg
      GroupDescription: Wireguard Security Group
      VpcId: !GetAtt VPCStack.Outputs.VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 51821
          ToPort: 51821
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 51820
          ToPort: 51820
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  WireguardInstance:
    Type: AWS::EC2::Instance
    DependsOn: VPCStack
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT15M
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t3a.small
      SubnetId: !GetAtt VPCStack.Outputs.PublicSubnet0
      SecurityGroupIds:
        - !Ref WireguardSG
      
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash -ex

          yum -y update
          
          yum -y install docker

          usermod -a -G docker ec2-user

          newgrp docker

          systemctl enable docker.service
          systemctl start docker.service

          export wgeip=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

          export rwfile="/etc/yum.repos.d/wireguard.repo"
          export rwurl="https://copr.fedorainfracloud.org/coprs/jdoss/wireguard/repo/epel-7/jdoss-wireguard-epel-7.repo"
          wget --output-document="$rwfile" "$rwurl"
          yum install -y wireguard-dkms wireguard-tools

          export metadata="http://169.254.169.254/latest/meta-data"
          export mac=$(curl -s $metadata/network/interfaces/macs/ | head -n1 | tr -d '/')
          export vpccidr=$(curl -s $metadata/network/interfaces/macs/$mac/vpc-ipv4-cidr-block/)
          export dnsserver=$(cut -d/ -f1 <<< "$vpccidr" | awk -F . 'BEGIN {OFS="."} {print $1,$2,$3,$4+2}')

          docker run -d \
            --name=wg-easy \
            -e WG_HOST=$wgeip \
            -e PASSWORD=${WireguardPassword} \
            -e WG_ALLOWED_IPS=$vpccidr \
            -e WG_DEFAULT_DNS=$dnsserver \
            -v ~/.wg-easy:/etc/wireguard \
            -p 51820:51820/udp \
            -p 51821:51821/tcp \
            --cap-add=NET_ADMIN \
            --cap-add=SYS_MODULE \
            --sysctl="net.ipv4.conf.all.src_valid_mark=1" \
            --sysctl="net.ipv4.ip_forward=1" \
            --restart unless-stopped \
            weejewel/wg-easy
            
          yum update -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WireguardInstance --region ${AWS::Region}

  NginxSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Nginx-sg
      GroupDescription: Nginx Security Group
      VpcId: !GetAtt VPCStack.Outputs.VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref WireguardSG
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref WireguardSG
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0

  NginxInstance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT15M
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t3a.small
      SubnetId: !GetAtt VPCStack.Outputs.PrivateSubnet0
      SecurityGroupIds:
        - !Ref NginxSG
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -ex

          yum -y update

          amazon-linux-extras enable nginx1

          yum -y install nginx

          service nginx start

          HOSTNAME=$(hostname)

          echo "Hello from $HOSTNAME" > /usr/share/nginx/html/index.html

          yum update -y aws-cfn-bootstrap
          
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource NginxInstance --region ${AWS::Region}

Outputs:
  WireguardIP:
    Value: !GetAtt WireguardInstance.PublicIp
  NginxPrivateIP:
    Value: !GetAtt NginxInstance.PrivateIp